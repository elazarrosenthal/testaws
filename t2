RUN-INSTANCES()						       RUN-INSTANCES()



1mNAME0m
       run-instances -

1mDESCRIPTION0m
       Launches	 the  specified number of instances using an AMI for which you
       have permissions.

       When you launch an instance, it enters the  1mpending  22mstate.	 After	the
       instance	 is  ready  for you, it enters the 1mrunning 22mstate. To check the
       state of your instance, call  describe-instances .

       To ensure faster	 instance  launches,  break  up	 large	requests  into
       smaller	batches. For example, create five separate launch requests for
       100 instances each instead of one launch request for 500 instances.

       If you don't specify a security group when launching an instance,  Ama-
       zon  EC2	 uses  the  default  security group. For more information, see
       4mSecurity24m 4mGroups24m in the 4mAmazon24m 4mElastic24m 4mCompute24m 4mCloud24m 4mUser24m 4mGuide24m .

       [EC2-VPC only accounts] If you don't specify a subnet in	 the  request,
       we choose a default subnet from your default VPC for you.

       [EC2-Classic  accounts]	If  you're  launching into EC2-Classic and you
       don't specify an Availability Zone, we choose one for you.

       Linux instances have access to the public key of the key pair at	 boot.
       You  can	 use this key to provide secure access to the instance. Amazon
       EC2 public images use this feature to  provide  secure  access  without
       passwords.  For	more  information, see 4mKey24m 4mPairs24m in the 4mAmazon24m 4mElastic0m
       4mCompute24m 4mCloud24m 4mUser24m 4mGuide24m .

       You can provide optional user data when launching an instance. For more
       information,  see 4mInstance24m 4mMetadata24m in the 4mAmazon24m 4mElastic24m 4mCompute24m 4mCloud0m
       4mUser24m 4mGuide24m .

       If any of the AMIs have a product code attached for which the user  has
       not subscribed, 1mrun-instances 22mfails.

       Some instance types can only be launched into a VPC. If you do not have
       a default VPC, or if you do not specify a subnet	 ID  in	 the  request,
       1mrun-instances 22mfails. For more information, see 4mInstance24m 4mTypes24m 4mAvailable0m
       4mOnly24m 4min24m 4ma24m 4mVPC24m .

       For more information about  troubleshooting,  see  4mWhat24m  4mTo24m  4mDo24m  4mIf24m	4mAn0m
       4mInstance24m  4mImmediately24m	4mTerminates24m	 ,  and 4mTroubleshooting24m 4mConnecting24m 4mto0m
       4mYour24m 4mInstance24m in the 4mAmazon24m 4mElastic24m 4mCompute24m 4mCloud24m 4mUser24m 4mGuide24m .

1mSYNOPSIS0m
	    run-instances
	  [--dry-run | --no-dry-run]
	  --image-id <value>
	  [--key-name <value>]
	  [--security-groups <value>]
	  [--security-group-ids <value>]
	  [--user-data <value>]
	  [--instance-type <value>]
	  [--placement <value>]
	  [--kernel-id <value>]
	  [--ramdisk-id <value>]
	  [--block-device-mappings <value>]
	  [--monitoring <value>]
	  [--subnet-id <value>]
	  [--disable-api-termination | --enable-api-termination]
	  [--instance-initiated-shutdown-behavior <value>]
	  [--private-ip-address <value>]
	  [--client-token <value>]
	  [--additional-info <value>]
	  [--network-interfaces <value>]
	  [--iam-instance-profile <value>]
	  [--ebs-optimized | --no-ebs-optimized]
	  [--count <value>]
	  [--secondary-private-ip-addresses <value>]
	  [--secondary-private-ip-address-count <value>]
	  [--associate-public-ip-address | --no-associate-public-ip-address]
	  [--cli-input-json <value>]
	  [--generate-cli-skeleton]

1mOPTIONS0m
       1m--dry-run 22m| 1m--no-dry-run 22m(boolean)
	  Checks whether you have the required	permissions  for  the  action,
	  without actually making the request, and provides an error response.
	  If you have the required permissions, the error response is  1mDryRun-0m
	  1mOperation 22m. Otherwise, it is 1mUnauthorizedOperation 22m.

       1m--image-id 22m(string)
	  The ID of the AMI, which you can get by calling  describe-images .

       1m--key-name 22m(string)
	  The  name  of	 the  key  pair. You can create a key pair using  cre-
	  ate-key-pair or  import-key-pair .

	  1mWARNING:0m
	      If you do not specify a key  pair,  you  can't  connect  to  the
	      instance	unless	you  choose an AMI that is configured to allow
	      users another way to log in.

       1m--security-groups 22m(list)
	  [EC2-Classic, default VPC] One or more security group names.	For  a
	  nondefault VPC, you must use security group IDs instead.

	  Default: Amazon EC2 uses the default security group.

       Syntax:

	  "string" "string" ...

       1m--security-group-ids 22m(list)
	  One  or  more	 security  group  IDs. You can create a security group
	  using	 create-security-group .

	  Default: Amazon EC2 uses the default security group.

       Syntax:

	  "string" "string" ...

       1m--user-data 22m(string)
	  Data to configure the instance, or a script to run  during  instance
	  launch.  For	more  information,  see 4mRunning24m 4mCommands24m 4mon24m 4mYour24m 4mLinux0m
	  4mInstance24m 4mat24m 4mLaunch24m (Linux) and 4mAdding24m 4mUser24m 4mData24m (Windows).  For	 API
	  calls,  the text must be base64-encoded. For command line tools, the
	  encoding is performed for you, and you can  load  the	 text  from  a
	  file.

       1m--instance-type 22m(string)
	  The  instance	 type. For more information, see 4mInstance24m 4mTypes24m in the
	  4mAmazon24m 4mElastic24m 4mCompute24m 4mCloud24m 4mUser24m 4mGuide24m .

	  Default: 1mm1.small0m

	  Possible values:

	  o 1mt1.micro0m

	  o 1mm1.small0m

	  o 1mm1.medium0m

	  o 1mm1.large0m

	  o 1mm1.xlarge0m

	  o 1mm3.medium0m

	  o 1mm3.large0m

	  o 1mm3.xlarge0m

	  o 1mm3.2xlarge0m

	  o 1mm4.large0m

	  o 1mm4.xlarge0m

	  o 1mm4.2xlarge0m

	  o 1mm4.4xlarge0m

	  o 1mm4.10xlarge0m

	  o 1mt2.nano0m

	  o 1mt2.micro0m

	  o 1mt2.small0m

	  o 1mt2.medium0m

	  o 1mt2.large0m

	  o 1mm2.xlarge0m

	  o 1mm2.2xlarge0m

	  o 1mm2.4xlarge0m

	  o 1mcr1.8xlarge0m

	  o 1mi2.xlarge0m

	  o 1mi2.2xlarge0m

	  o 1mi2.4xlarge0m

	  o 1mi2.8xlarge0m

	  o 1mhi1.4xlarge0m

	  o 1mhs1.8xlarge0m

	  o 1mc1.medium0m

	  o 1mc1.xlarge0m

	  o 1mc3.large0m

	  o 1mc3.xlarge0m

	  o 1mc3.2xlarge0m

	  o 1mc3.4xlarge0m

	  o 1mc3.8xlarge0m

	  o 1mc4.large0m

	  o 1mc4.xlarge0m

	  o 1mc4.2xlarge0m

	  o 1mc4.4xlarge0m

	  o 1mc4.8xlarge0m

	  o 1mcc1.4xlarge0m

	  o 1mcc2.8xlarge0m

	  o 1mg2.2xlarge0m

	  o 1mg2.8xlarge0m

	  o 1mcg1.4xlarge0m

	  o 1mr3.large0m

	  o 1mr3.xlarge0m

	  o 1mr3.2xlarge0m

	  o 1mr3.4xlarge0m

	  o 1mr3.8xlarge0m

	  o 1md2.xlarge0m

	  o 1md2.2xlarge0m

	  o 1md2.4xlarge0m

	  o 1md2.8xlarge0m

       1m--placement 22m(structure)
	  The placement for the instance.

       Shorthand Syntax:

	  AvailabilityZone=string,GroupName=string,Tenancy=string,HostId=string,Affinity=string

       JSON Syntax:

	  {
	    "AvailabilityZone": "string",
	    "GroupName": "string",
	    "Tenancy": "default"|"dedicated"|"host",
	    "HostId": "string",
	    "Affinity": "string"
	  }

       1m--kernel-id 22m(string)
	  The ID of the kernel.

	  1mWARNING:0m
	      We recommend that you use PV-GRUB instead	 of  kernels  and  RAM
	      disks.  For  more information, see 4mPV-GRUB24m in the 4mAmazon24m 4mElastic0m
	      4mCompute24m 4mCloud24m 4mUser24m 4mGuide24m .

       1m--ramdisk-id 22m(string)
	  The ID of the RAM disk.

	  1mWARNING:0m
	      We recommend that you use PV-GRUB instead	 of  kernels  and  RAM
	      disks.  For  more information, see 4mPV-GRUB24m in the 4mAmazon24m 4mElastic0m
	      4mCompute24m 4mCloud24m 4mUser24m 4mGuide24m .

       1m--block-device-mappings 22m(list)
	  The block device mapping.

       Shorthand Syntax:

	  VirtualName=string,DeviceName=string,Ebs={SnapshotId=string,VolumeSize=integer,DeleteOnTermination=boolean,VolumeType=string,Iops=integer,Encrypted=boolean},NoDevice=string ...

       JSON Syntax:

	  [
	    {
	      "VirtualName": "string",
	      "DeviceName": "string",
	      "Ebs": {
		"SnapshotId": "string",
		"VolumeSize": integer,
		"DeleteOnTermination": true|false,
		"VolumeType": "standard"|"io1"|"gp2",
		"Iops": integer,
		"Encrypted": true|false
	      },
	      "NoDevice": "string"
	    }
	    ...
	  ]

       1m--monitoring 22m(structure)
	  The monitoring for the instance.

       Shorthand Syntax:

	  Enabled=boolean

       JSON Syntax:

	  {
	    "Enabled": true|false
	  }

       1m--subnet-id 22m(string)
	  [EC2-VPC] The ID of the subnet to launch the instance into.

       1m--disable-api-termination 22m| 1m--enable-api-termination 22m(boolean)
	  If you set this parameter to 1mtrue 22m, you can't terminate the instance
	  using	 the  Amazon  EC2 console, CLI, or API; otherwise, you can. If
	  you set this parameter to 1mtrue 22mand then later want  to  be  able	 to
	  terminate  the instance, you must first change the value of the 1mdis-0m
	  1mableApiTermination	  22mattribute	   to	  1mfalse     22musing	    mod-
	  ify-instance-attribute  . Alternatively, if you set 1mInstanceInitiat-0m
	  1medShutdownBehavior 22mto 1mterminate 22m, you can terminate the instance  by
	  running the shutdown command from the instance.

	  Default: 1mfalse0m

       1m--instance-initiated-shutdown-behavior 22m(string)
	  Indicates  whether an instance stops or terminates when you initiate
	  shutdown from the instance (using the operating system  command  for
	  system shutdown).

	  Default: 1mstop0m

	  Possible values:

	  o 1mstop0m

	  o 1mterminate0m

       1m--private-ip-address 22m(string)
	  [EC2-VPC]  The primary IP address. You must specify a value from the
	  IP address range of the subnet.

	  Only one private IP address can be designated as primary. Therefore,
	  you  can't specify this parameter if 1mPrivateIpAddresses.n.Primary 22mis
	  set to 1mtrue 22mand 1mPrivateIpAddresses.n.PrivateIpAddress 22mis set  to  an
	  IP address.

	  Default:  We	select	an IP address from the IP address range of the
	  subnet.

       1m--client-token 22m(string)
	  Unique, case-sensitive identifier you provide to ensure the  idempo-
	  tency of the request. For more information, see 4mEnsuring24m 4mIdempotency0m
	  .

	  Constraints: Maximum 64 ASCII characters

       1m--additional-info 22m(string)
	  Reserved.

       1m--network-interfaces 22m(list)
	  One or more network interfaces.

       Shorthand Syntax:

	  NetworkInterfaceId=string,DeviceIndex=integer,SubnetId=string,Description=string,PrivateIpAddress=string,Groups=string,string,DeleteOnTermination=boolean,PrivateIpAddresses=[{PrivateIpAddress=string,Primary=boolean},{PrivateIpAddress=string,Primary=boolean}],SecondaryPrivateIpAddressCount=integer,AssociatePublicIpAddress=boolean ...

       JSON Syntax:

	  [
	    {
	      "NetworkInterfaceId": "string",
	      "DeviceIndex": integer,
	      "SubnetId": "string",
	      "Description": "string",
	      "PrivateIpAddress": "string",
	      "Groups": ["string", ...],
	      "DeleteOnTermination": true|false,
	      "PrivateIpAddresses": [
		{
		  "PrivateIpAddress": "string",
		  "Primary": true|false
		}
		...
	      ],
	      "SecondaryPrivateIpAddressCount": integer,
	      "AssociatePublicIpAddress": true|false
	    }
	    ...
	  ]

       1m--iam-instance-profile 22m(structure)
	  The IAM instance profile.

       Shorthand Syntax:

	  Arn=string,Name=string

       JSON Syntax:

	  {
	    "Arn": "string",
	    "Name": "string"
	  }

       1m--ebs-optimized 22m| 1m--no-ebs-optimized 22m(boolean)
	  Indicates whether the instance is optimized for EBS I/O. This	 opti-
	  mization  provides  dedicated	 throughput to Amazon EBS and an opti-
	  mized configuration stack to provide optimal	EBS  I/O  performance.
	  This	optimization  isn't  available	with all instance types. Addi-
	  tional usage charges apply when using an EBS-optimized instance.

	  Default: 1mfalse0m

       1m--count 22m(string)
	  Number of instances to launch. If a single number is provided, it is
	  assumed  to  be the minimum to launch (defaults to 1). If a range is
	  provided in the form 1mmin:max 22mthen the first number is interpreted as
	  the  minimum	number of instances to launch and the second is inter-
	  preted as the maximum number of instances to launch.

       1m--secondary-private-ip-addresses 22m(string) [EC2-VPC] A secondary private
       IP  address for the network interface or instance. You can specify this
       multiple times to assign multiple secondary IP addresses. If  you  want
       additional private IP addresses but do not need a specific address, use
       the --secondary-private-ip-address-count option.

       1m--secondary-private-ip-address-count 22m(string) [EC2-VPC] The	 number	 of
       secondary IP addresses to assign to the network interface or instance.

       1m--associate-public-ip-address 22m| 1m--no-associate-public-ip-address 22m(bool-
       ean) [EC2-VPC] If specified a public IP address will be assigned to the
       new instance in a VPC.

       1m--cli-input-json  22m(string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by	1m--gen-0m
       1merate-cli-skeleton22m.	 If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values.

       1m--generate-cli-skeleton 22m(boolean) Prints a sample input JSON  to  stan-
       dard  output.  Note the specified operation is not run if this argument
       is specified.  The  sample  input  can  be  used	 as  an	 argument  for
       1m--cli-input-json22m.

1mEXAMPLES0m
       1mTo launch an instance in EC2-Classic0m

       This example launches a single instance of type 1mt1.micro22m.

       The  key	 pair and security group, named 1mMyKeyPair 22mand 1mMySecurityGroup22m,
       must exist.

       Command:

	  aws ec2 run-instances --image-id ami-1a2b3c4d --count 1 --instance-type t1.micro --key-name MyKeyPair --security-groups MySecurityGroup

       Output:

	  {
	      "OwnerId": "123456789012",
	      "ReservationId": "r-5875ca20",
	      "Groups": [
		  {
		      "GroupName": "MySecurityGroup",
		      "GroupId": "sg-903004f8"
		  }
	      ],
	      "Instances": [
		  {
		      "Monitoring": {
			  "State": "disabled"
		      },
		      "PublicDnsName": null,
		      "RootDeviceType": "ebs",
		      "State": {
			  "Code": 0,
			  "Name": "pending"
		      },
		      "EbsOptimized": false,
		      "LaunchTime": "2013-07-19T02:42:39.000Z",
		      "ProductCodes": [],
		      "StateTransitionReason": null,
		      "InstanceId": "i-123abc45",
		      "ImageId": "ami-1a2b3c4d",
		      "PrivateDnsName": null,
		      "KeyName": "MyKeyPair",
		      "SecurityGroups": [
			  {
			      "GroupName": "MySecurityGroup",
			      "GroupId": "sg-903004f8"
			  }
		      ],
		      "ClientToken": null,
		      "InstanceType": "t1.micro",
		      "NetworkInterfaces": [],
		      "Placement": {
			  "Tenancy": "default",
			  "GroupName": null,
			  "AvailabilityZone": "us-east-1b"
		      },
		      "Hypervisor": "xen",
		      "BlockDeviceMappings": [],
		      "Architecture": "x86_64",
		      "StateReason": {
			  "Message": "pending",
			  "Code": "pending"
		      },
		      "RootDeviceName": "/dev/sda1",
		      "VirtualizationType": "hvm",
		      "AmiLaunchIndex": 0
		  }
	      ]
	  }

       1mTo launch an instance in EC2-VPC0m

       This example launches a single instance of type 1mt2.micro 22minto the spec-
       ified subnet.

       The  key	 pair  named 1mMyKeyPair 22mand the security group sg-903004f8 must
       exist.

       Command:

	  aws ec2 run-instances --image-id ami-abc12345 --count 1 --instance-type t2.micro --key-name MyKeyPair --security-group-ids sg-903004f8 --subnet-id subnet-6e7f829e

       Output:

	  {
	      "OwnerId": "123456789012",
	      "ReservationId": "r-5875ca20",
	      "Groups": [],
	      "Instances": [
		  {
		      "Monitoring": {
			  "State": "disabled"
		      },
		      "PublicDnsName": null,
		      "RootDeviceType": "ebs",
		      "State": {
			  "Code": 0,
			  "Name": "pending"
		      },
		      "EbsOptimized": false,
		      "LaunchTime": "2013-07-19T02:42:39.000Z",
		      "PrivateIpAddress": "10.0.1.114",
		      "ProductCodes": [],
		      "VpcId": "vpc-1a2b3c4d",
		      "InstanceId": "i-5203422c",
		      "ImageId": "ami-abc12345",
		      "PrivateDnsName": "ip-10-0-1-114.ec2.internal",
		      "KeyName": "MyKeyPair",
		      "SecurityGroups": [
			  {
			      "GroupName": "MySecurityGroup",
			      "GroupId": "sg-903004f8"
			  }
		      ],
		      "ClientToken": null,
		      "SubnetId": "subnet-6e7f829e",
		      "InstanceType": "t2.micro",
		      "NetworkInterfaces": [
			  {
			      "Status": "in-use",
			      "MacAddress": "0e:ad:05:3b:60:52",
			      "SourceDestCheck": true,
			      "VpcId": "vpc-1a2b3c4d",
			      "Description": "null",
			      "NetworkInterfaceId": "eni-a7edb1c9",
			      "PrivateIpAddresses": [
				  {
				      "PrivateDnsName": "ip-10-0-1-114.ec2.internal",
				      "Primary": true,
				      "PrivateIpAddress": "10.0.1.114"
				  }
			      ],
			      "PrivateDnsName": "ip-10-0-1-114.ec2.internal",
			      "Attachment": {
				  "Status": "attached",
				  "DeviceIndex": 0,
				  "DeleteOnTermination": true,
				  "AttachmentId": "eni-attach-52193138",
				  "AttachTime": "2013-07-19T02:42:39.000Z"
			      },
			      "Groups": [
				  {
				      "GroupName": "MySecurityGroup",
				      "GroupId": "sg-903004f8"
				  }
			      ],
			      "SubnetId": "subnet-6e7f829e",
			      "OwnerId": "123456789012",
			      "PrivateIpAddress": "10.0.1.114"
			  }
		      ],
		      "SourceDestCheck": true,
		      "Placement": {
			  "Tenancy": "default",
			  "GroupName": null,
			  "AvailabilityZone": "us-east-1b"
		      },
		      "Hypervisor": "xen",
		      "BlockDeviceMappings": [],
		      "Architecture": "x86_64",
		      "StateReason": {
			  "Message": "pending",
			  "Code": "pending"
		      },
		      "RootDeviceName": "/dev/sda1",
		      "VirtualizationType": "hvm",
		      "AmiLaunchIndex": 0
		  }
	      ]
	  }

       The following example requests a public IP address for an instance that
       you're launching into a nondefault subnet:

       Command:

	  aws ec2 run-instances --image-id ami-c3b8d6aa --count 1 --instance-type t1.micro --key-name MyKeyPair --security-group-ids sg-903004f8 --subnet-id subnet-6e7f829e --associate-public-ip-address

       1mTo launch an instance using a block device mapping0m

       Add  the	 following  parameter to your 1mrun-instances 22mcommand to specify
       block devices:

	  --block-device-mappings file://mapping.json

       To add an Amazon EBS volume with the device name 1m/dev/sdh 22mand a  volume
       size of 100, specify the following in mapping.json:

	  [
	    {
	      "DeviceName": "/dev/sdh",
	      "Ebs": {
		"VolumeSize": 100
	      }
	    }
	  ]

       To  add	1mephemeral1  22mas  an	 instance store volume with the device name
       1m/dev/sdc22m, specify the following in mapping.json:

	  [
	    {
	      "DeviceName": "/dev/sdc",
	      "VirtualName": "ephemeral1"
	    }
	  ]

       To omit a device specified by the AMI used to launch the instance  (for
       example, 1m/dev/sdf22m), specify the following in mapping.json:

	  [
	    {
	      "DeviceName": "/dev/sdf",
	      "NoDevice": ""
	    }
	  ]

       You  can	 view only the Amazon EBS volumes in your block device mapping
       using the console or the 1mdescribe-instances 22mcommand. To view  all  vol-
       umes, including the instance store volumes, use the following command.

       Command:

	  GET http://169.254.169.254/latest/meta-data/block-device-mapping

       Output:

	  ami
	  ephemeral1

       Note  that  1mami  22mrepresents	 the  root volume. To get details about the
       instance store volume 1mephemeral122m, use the following command.

       Command:

	  GET http://169.254.169.254/latest/meta-data/block-device-mapping/ephemeral1

       Output:

	  sdc

       1mTo launch an instance with a modified block device mapping0m

       You can change individual characteristics of existing AMI block	device
       mappings	 to  suit your needs. Perhaps you want to use an existing AMI,
       but you want a larger root volume than the usual 8 GiB. Or,  you	 would
       like  to	 use  a General Purpose (SSD) volume for an AMI that currently
       uses a Magnetic volume.

       Use the 1mdescribe-images 22mcommand with the image ID of the AMI  you  want
       to  use	to  find  its  existing block device mapping. You should see a
       block device mapping in the output:

	  {
	    "DeviceName": "/dev/sda1",
	    "Ebs": {
	      "DeleteOnTermination": true,
	      "SnapshotId": "snap-b047276d",
	      "VolumeSize": 8,
	      "VolumeType": "standard",
	      "Encrypted": false
	    }
	  }

       You can modify the above mapping by changing the individual parameters.
       For  example,  to  launch an instance with a modified block device map-
       ping, add the following parameter  to  your  1mrun-instances  22mcommand	 to
       change the above mapping's volume size and type:

	  --block-device-mappings file://mapping.json

       Where mapping.json contains the following:

	  [
	    {
	      "DeviceName": "/dev/sda1",
	      "Ebs": {
		"DeleteOnTermination": true,
		"SnapshotId": "snap-b047276d",
		"VolumeSize": 100,
		"VolumeType": "gp2"
	      }
	    }
	  ]

       1mTo launch an instance with user data0m

       You can launch an instance and specify user data that performs instance
       configuration, or that runs a script. The user data needs to be	passed
       as  normal string, base64 encoding is handled internally. The following
       example passes user data in a file called 1mmy_script.txt 22mthat contains a
       configuration script for your instance. The script runs at launch.

       Command:

	  aws ec2 run-instances --image-id ami-abc1234 --count 1 --instance-type m4.large --key-name keypair --user-data file://my_script.txt --subnet-id subnet-abcd1234 --security-group-ids sg-abcd1234

       For  more  information  about launching instances, see 4mUsing24m 4mAmazon24m 4mEC20m
       4mInstances24m in the 4mAWS24m 4mCommand24m 4mLine24m 4mInterface24m 4mUser24m 4mGuide24m.

       1mTo launch an instance with an instance profile0m

       This example shows the use of the 1miam-instance-profile 22moption to  spec-
       ify an 4mIAM24m 4minstance24m 4mprofile24m by name.

       Command:

	  aws ec2 run-instances --iam-instance-profile Name=MyInstanceProfile --image-id ami-1a2b3c4d --count 1 --instance-type t2.micro --key-name MyKeyPair --security-groups MySecurityGroup

1mOUTPUT0m
       ReservationId -> (string)
	  The ID of the reservation.

       OwnerId -> (string)
	  The ID of the AWS account that owns the reservation.

       RequesterId -> (string)
	  The  ID  of the requester that launched the instances on your behalf
	  (for example, AWS Management Console or Auto Scaling).

       Groups -> (list)
	  [EC2-Classic only] One or more security groups.

	  (structure)
	      Describes a security group.

	      GroupName -> (string)
		 The name of the security group.

	      GroupId -> (string)
		 The ID of the security group.

       Instances -> (list)
	  One or more instances.

	  (structure)
	      Describes an instance.

	      InstanceId -> (string)
		 The ID of the instance.

	      ImageId -> (string)
		 The ID of the AMI used to launch the instance.

	      State -> (structure)
		 The current state of the instance.

		 Code -> (integer)
		     The low byte represents the state. The high  byte	is  an
		     opaque internal value and should be ignored.

		     o 1m0 22m: 1mpending0m

		     o 1m16 22m: 1mrunning0m

		     o 1m32 22m: 1mshutting-down0m

		     o 1m48 22m: 1mterminated0m

		     o 1m64 22m: 1mstopping0m

		     o 1m80 22m: 1mstopped0m

		 Name -> (string)
		     The current state of the instance.

	      PrivateDnsName -> (string)
		 The  private DNS name assigned to the instance. This DNS name
		 can only be used inside the Amazon EC2 network. This name  is
		 not  available	 until	the instance enters the 1mrunning 22mstate.
		 For EC2-VPC, this name is only available  if  you've  enabled
		 DNS hostnames for your VPC.

	      PublicDnsName -> (string)
		 The  public  DNS  name assigned to the instance. This name is
		 not available until the instance enters  the  1mrunning  22mstate.
		 For  EC2-VPC,	this  name is only available if you've enabled
		 DNS hostnames for your VPC.

	      StateTransitionReason -> (string)
		 The reason for the most recent state transition.  This	 might
		 be an empty string.

	      KeyName -> (string)
		 The  name of the key pair, if this instance was launched with
		 an associated key pair.

	      AmiLaunchIndex -> (integer)
		 The AMI launch index, which can be used to find this instance
		 in the launch group.

	      ProductCodes -> (list)
		 The product codes attached to this instance, if applicable.

		 (structure)
		     Describes a product code.

		     ProductCodeId -> (string)
			The product code.

		     ProductCodeType -> (string)
			The type of product code.

	      InstanceType -> (string)
		 The instance type.

	      LaunchTime -> (timestamp)
		 The time the instance was launched.

	      Placement -> (structure)
		 The location where the instance launched, if applicable.

		 AvailabilityZone -> (string)
		     The Availability Zone of the instance.

		 GroupName -> (string)
		     The  name	of the placement group the instance is in (for
		     cluster compute instances).

		 Tenancy -> (string)
		     The tenancy of the instance (if the instance  is  running
		     in	 a  VPC). An instance with a tenancy of 1mdedicated 22mruns
		     on single-tenant hardware. The 1mhost 22mtenancy is  not  sup-
		     ported for the  import-instance command.

		 HostId -> (string)
		     The  ID  of  the  Dedicted	 host  on  which  the instance
		     resides.  This  parameter	is   not   support   for   the
		     import-instance command.

		 Affinity -> (string)
		     The  affinity  setting  for the instance on the Dedicated
		     host.  This  parameter   is   not	 supported   for   the
		     import-instance command.

	      KernelId -> (string)
		 The kernel associated with this instance, if applicable.

	      RamdiskId -> (string)
		 The RAM disk associated with this instance, if applicable.

	      Platform -> (string)
		 The value is 1mWindows 22mfor Windows instances; otherwise blank.

	      Monitoring -> (structure)
		 The monitoring information for the instance.

		 State -> (string)
		     Indicates whether monitoring is enabled for the instance.

	      SubnetId -> (string)
		 [EC2-VPC]  The ID of the subnet in which the instance is run-
		 ning.

	      VpcId -> (string)
		 [EC2-VPC] The ID of the VPC in which the instance is running.

	      PrivateIpAddress -> (string)
		 The private IP address assigned to the instance.

	      PublicIpAddress -> (string)
		 The public IP address assigned to the instance,  if  applica-
		 ble.

	      StateReason -> (structure)
		 The reason for the most recent state transition.

		 Code -> (string)
		     The reason code for the state change.

		 Message -> (string)
		     The message for the state change.

		     o 1mServer.SpotInstanceTermination	 22m:  A  Spot instance was
		       terminated due to an increase in the market price.

		     o 1mServer.InternalError 22m: An internal error occurred  dur-
		       ing instance launch, resulting in termination.

		     o 1mServer.InsufficientInstanceCapacity  22m: There was insuf-
		       ficient	instance  capacity  to	satisfy	  the	launch
		       request.

		     o 1mClient.InternalError	22m:  A	 client	 error	caused	the
		       instance to terminate on launch.

		     o 1mClient.InstanceInitiatedShutdown  22m:	 The  instance	was
		       shut  down  using  the  1mshutdown  -h  22mcommand  from the
		       instance.

		     o 1mClient.UserInitiatedShutdown 22m: The	instance  was  shut
		       down using the Amazon EC2 API.

		     o 1mClient.VolumeLimitExceeded 22m: The limit on the number of
		       EBS volumes or total  storage  was  exceeded.  Decrease
		       usage or request an increase in your limits.

		     o 1mClient.InvalidSnapshot.NotFound  22m:	The specified snap-
		       shot was not found.

	      Architecture -> (string)
		 The architecture of the image.

	      RootDeviceType -> (string)
		 The root device type used by the AMI. The AMI can use an  EBS
		 volume or an instance store volume.

	      RootDeviceName -> (string)
		 The root device name (for example, 1m/dev/sda1 22mor 1m/dev/xvda 22m).

	      BlockDeviceMappings -> (list)
		 Any block device mapping entries for the instance.

		 (structure)
		     Describes a block device mapping.

		     DeviceName -> (string)
			The  device name exposed to the instance (for example,
			1m/dev/sdh 22mor 1mxvdh 22m).

		     Ebs -> (structure)
			Parameters used to automatically set  up  EBS  volumes
			when the instance is launched.

			VolumeId -> (string)
			    The ID of the EBS volume.

			Status -> (string)
			    The attachment state.

			AttachTime -> (timestamp)
			    The time stamp when the attachment initiated.

			DeleteOnTermination -> (boolean)
			    Indicates	whether	  the  volume  is  deleted  on
			    instance termination.

	      VirtualizationType -> (string)
		 The virtualization type of the instance.

	      InstanceLifecycle -> (string)
		 Indicates whether this is a  Spot  instance  or  a  Scheduled
		 Instance.

	      SpotInstanceRequestId -> (string)
		 If  the  request  is  a  Spot instance request, the ID of the
		 request.

	      ClientToken -> (string)
		 The idempotency token you  provided  when  you	 launched  the
		 instance, if applicable.

	      Tags -> (list)
		 Any tags assigned to the instance.

		 (structure)
		     Describes a tag.

		     Key -> (string)
			The key of the tag.

			Constraints:  Tag keys are case-sensitive and accept a
			maximum of 127 Unicode characters. May not begin  with
			1maws:0m

		     Value -> (string)
			The value of the tag.

			Constraints:  Tag values are case-sensitive and accept
			a maximum of 255 Unicode characters.

	      SecurityGroups -> (list)
		 One or more security groups for the instance.

		 (structure)
		     Describes a security group.

		     GroupName -> (string)
			The name of the security group.

		     GroupId -> (string)
			The ID of the security group.

	      SourceDestCheck -> (boolean)
		 Specifies whether to enable an instance launched in a VPC  to
		 perform  NAT. This controls whether source/destination check-
		 ing is enabled on the instance. A value of 1mtrue 22mmeans  check-
		 ing  is  enabled,  and	 1mfalse 22mmeans checking is disabled. The
		 value must be 1mfalse 22mfor the instance to perform NAT. For more
		 information,  see 4mNAT24m 4mInstances24m in the 4mAmazon24m 4mVirtual24m 4mPrivate0m
		 4mCloud24m 4mUser24m 4mGuide24m .

	      Hypervisor -> (string)
		 The hypervisor type of the instance.

	      NetworkInterfaces -> (list)
		 [EC2-VPC] One or more network interfaces for the instance.

		 (structure)
		     Describes a network interface.

		     NetworkInterfaceId -> (string)
			The ID of the network interface.

		     SubnetId -> (string)
			The ID of the subnet.

		     VpcId -> (string)
			The ID of the VPC.

		     Description -> (string)
			The description.

		     OwnerId -> (string)
			The ID of the AWS account  that	 created  the  network
			interface.

		     Status -> (string)
			The status of the network interface.

		     MacAddress -> (string)
			The MAC address.

		     PrivateIpAddress -> (string)
			The  IP	 address  of  the network interface within the
			subnet.

		     PrivateDnsName -> (string)
			The private DNS name.

		     SourceDestCheck -> (boolean)
			Indicates whether to validate network  traffic	to  or
			from this network interface.

		     Groups -> (list)
			One or more security groups.

			(structure)
			    Describes a security group.

			    GroupName -> (string)
			       The name of the security group.

			    GroupId -> (string)
			       The ID of the security group.

		     Attachment -> (structure)
			The network interface attachment.

			AttachmentId -> (string)
			    The ID of the network interface attachment.

			DeviceIndex -> (integer)
			    The	 index	of  the device on the instance for the
			    network interface attachment.

			Status -> (string)
			    The attachment state.

			AttachTime -> (timestamp)
			    The time stamp when the attachment initiated.

			DeleteOnTermination -> (boolean)
			    Indicates whether the network interface is deleted
			    when the instance is terminated.

		     Association -> (structure)
			The  association information for an Elastic IP associ-
			ated with the network interface.

			PublicIp -> (string)
			    The public IP address or Elastic IP address	 bound
			    to the network interface.

			PublicDnsName -> (string)
			    The public DNS name.

			IpOwnerId -> (string)
			    The ID of the owner of the Elastic IP address.

		     PrivateIpAddresses -> (list)
			The  private  IP addresses associated with the network
			interface.

			(structure)
			    Describes a private IP address.

			    PrivateIpAddress -> (string)
			       The private IP address of  the  network	inter-
			       face.

			    PrivateDnsName -> (string)
			       The private DNS name.

			    Primary -> (boolean)
			       Indicates  whether  this IP address is the pri-
			       mary private IP address of the  network	inter-
			       face.

			    Association -> (structure)
			       The  association	 information for an Elastic IP
			       address for the network interface.

			       PublicIp -> (string)
				   The public IP address or Elastic IP address
				   bound to the network interface.

			       PublicDnsName -> (string)
				   The public DNS name.

			       IpOwnerId -> (string)
				   The	ID  of	the  owner  of	the Elastic IP
				   address.

	      IamInstanceProfile -> (structure)
		 The IAM instance profile associated  with  the	 instance,  if
		 applicable.

		 Arn -> (string)
		     The Amazon Resource Name (ARN) of the instance profile.

		 Id -> (string)
		     The ID of the instance profile.

	      EbsOptimized -> (boolean)
		 Indicates whether the instance is optimized for EBS I/O. This
		 optimization provides dedicated throughput to Amazon EBS  and
		 an  optimized configuration stack to provide optimal I/O per-
		 formance. This optimization isn't available with all instance
		 types. Additional usage charges apply when using an EBS Opti-
		 mized instance.

	      SriovNetSupport -> (string)
		 Specifies whether enhanced networking is enabled.



							       RUN-INSTANCES()
